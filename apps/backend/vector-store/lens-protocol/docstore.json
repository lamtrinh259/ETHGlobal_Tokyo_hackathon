[["0",{"pageContent":"Find the top 10 Lens Profiles and return their id, name, handle, and the number of totalFollowers, sorted by the number of most followers.\n\nquery ExploreProfilesTop10 {\n  exploreProfiles(request: { sortCriteria: MOST_FOLLOWERS, limit: 10 }) {\n    items {\n      id\n      name\n      handle\n      stats{\n        totalFollowers\n      }\n    }\n  }\n}\n","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/demo_example_3.txt"}}],["1",{"pageContent":"Welcome to the API docs for Lens Protocol. We aim to highlight all the endpoints which are exposed on the public API and explain how to use them and what they return.\n\nThe API is a GraphQL API which is very similar to how a lot of people use the subgraph when using The Graph so it should be very familiar for many developers. If you have come from a REST backend we will explain how you can easily get up and running with this on your client.\n\nGraphQL gives us a lot of benefits but the main one is a schema first approach. We believe for mass adoption and building of Lens we need the tools to be super easy and abstract away as much as the blockchain stuff as we can. You will see how we did this with our schema, everything should just make sense without having a deep technical understanding of how the protocol works or having to understand Solidity.\n\nAs the protocol data on the blockchain is very relational, our indexer does all the work for you. Mapping it into our Postgres database decoded and in a relational manner optimized for fast fetching. This allows you to query us with the same speed as if you were querying Twitter for example.\n\nWe have packed the API with a lot of features and will be continuing to develop and improve it. By using this API in your application you automatically inherit many of these improvements.\n","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/lensAPIintroduction.txt"}}],["2",{"pageContent":"Here is an example prompt to generate a graphQL query:\nGet me the Lens profile for stani\n\nquery Profile {\n  profile(request: { handle: \"stani.lens\" }) {\n    id\n    name\n    bio\n    followNftAddress\n    metadata\n    isDefault\n    picture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      __typename\n    }\n    handle\n    coverPicture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      __typename\n    }\n    ownedBy\n    stats {\n      totalFollowers\n      totalFollowing\n      totalPosts\n      totalComments\n      totalMirrors\n      totalPublications\n      totalCollects\n    }\n  }\n}\n","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt1.txt"}}],["3",{"pageContent":"Check if transaction 0x64464dc0de5aac614a82dfd946fc0e17105ff6ed177b7d677ddb88ec772c52d3 has been indexed\nquery HasTxHashBeenIndexed {\n  hasTxHashBeenIndexed(request: { txHash: \"0x64464dc0de5aac614a82dfd946fc0e17105ff6ed177b7d677ddb88ec772c52d3\" }) {\n    ... on TransactionIndexedResult {\n      indexed\n     \n    }\n  }\n}","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt10.txt"}}],["4",{"pageContent":"Check if API is still alive\n\nquery Query {\n  ping\n}","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt11.txt"}}],["5",{"pageContent":"Here is an example prompt to generate a graphQL query for the Lens Protocol: \nGet me the followers on Lens for address 0xD020E01C0c90Ab005A01482d34B808874345FD82\n\nquery Following {\n  following(request: { \n                address: \"0xD020E01C0c90Ab005A01482d34B808874345FD82\",\n              limit: 10\n             }) {\n    items {\n      profile {\n        id\n        name\n        bio\n        attributes {\n            displayType\n            traitType\n            key\n            value\n        }\n        followNftAddress\n        metadata\n        isDefault\n        handle\n        picture {\n          ... on NftImage {\n            contractAddress\n            tokenId\n            uri\n            verified\n          }\n          ... on MediaSet {\n            original {\n              url\n              width\n              height\n              mimeType\n            }\n            medium {\n              url\n              width\n              height\n              mimeType\n            }\n            small {\n              url\n              width\n              height\n              mimeType\n            }\n          }\n        }\n        coverPicture {\n          ... on NftImage {\n            contractAddress\n            tokenId\n            uri\n            verified\n          }\n          ... on MediaSet {\n            original {\n              url\n              width\n              height\n              mimeType\n            }\n            small {\n              width\n              url\n              height\n              mimeType\n            }\n            medium {\n              url\n              width\n              height\n              mimeType\n            }\n          }\n        }\n        ownedBy\n        dispatcher {\n          address\n          canUseRelay\n        }\n        stats {\n          totalFollowers\n          totalFollowing\n          totalPosts\n          totalComments\n          totalMirrors\n          totalPublications\n          totalCollects\n        }\n        followModule {\n          ... on FeeFollowModuleSettings {\n            type\n            amount {\n              asset {\n                name\n                symbol\n                decimals\n                address\n              }\n              value\n            }\n            recipient\n          }\n          ... on ProfileFollowModuleSettings {\n           type\n          }\n          ... on RevertFollowModuleSettings {\n           type\n          }\n        }\n      }\n      totalAmountOfTimesFollowing\n    }\n    pageInfo {\n      prev\n      next\n      totalCount\n    }\n  }\n}","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt2.txt"}}],["6",{"pageContent":"Here is an example prompt to generate a graphQL query:\nGet me the Lens profile for stani\n\nquery Profile {\n  profile(request: { handle: \"stani\" }) {\n    id\n    name\n    bio\n    followNftAddress\n    metadata\n    isDefault\n    picture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      __typename\n    }\n    handle\n    coverPicture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      __typename\n    }\n    ownedBy\n    stats {\n      totalFollowers\n      totalFollowing\n      totalPosts\n      totalComments\n      totalMirrors\n      totalPublications\n      totalCollects\n    }\n  }\n}\n","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt3.txt"}}],["7",{"pageContent":"Return the profile stats for profile id 0x09\n\nquery ProfileStats {\n  profiles(request: { profileIds: [\"0x09\"]}) {\n    items {\n      stats {\n        totalFollowers\n        totalFollowing\n        totalPosts\n        totalComments\n        totalMirrors\n        totalPublications\n        totalCollects\n      }\n    }\n  }\n}","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt4.txt"}}],["8",{"pageContent":"Return the bio and owner of 420tiesto.lens\n\nquery Profile {\n  profile(request: { handle: \"420tiesto.lens\" }) {\n    bio\n    ownedBy\n  }\n}\n","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt5.txt"}}],["9",{"pageContent":"Return 32 followers of profile id 0x51. Display their handles and wallet addresses\n\nquery Followers {\n  followers(request: { profileId: \"0x51\", limit: 32 }) {\n    items {\n      wallet {\n        address\n        defaultProfile {\n          handle\n        }\n      }\n    }\n  }\n}\n","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt6.txt"}}],["10",{"pageContent":"Get profiles owned by 0xD020E01C0c90Ab005A01482d34B808874345FD82 \nquery Profiles {\n  profiles(request: { ownedBy: [\"0xD020E01C0c90Ab005A01482d34B808874345FD82\"], limit: 10 }) {\n    items {\n      id\n    }}\n}","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt7.txt"}}],["11",{"pageContent":"Get the total of burned Profiles of lens protocol\n\nquery GlobalProtocolStats {\n  globalProtocolStats(request: null) {\n    totalBurntProfiles\n  }\n}","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt8.txt"}}],["12",{"pageContent":"Get the total Profiles of lens protocol\n\nquery GlobalProtocolStats {\n  globalProtocolStats(request: null) {\n    totalProfiles \n  }\n}","metadata":{"source":"/mnt/d/Entrepreneurship 2017 -/Investment and cryptocurrency/Web3_coding/ETHGlobal_Tokyo_hackathon_2023/apps/backend/documents/lens-protocol/prompt9.txt"}}]]